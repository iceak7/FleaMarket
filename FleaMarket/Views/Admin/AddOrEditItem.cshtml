@model ItemViewModel

<div class="modal" id="add-or-edit-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Översättning</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-translate-modal"></button>
            </div>
            <div id="text-generation-modal-body" class="modal-body">
                <div class="d-flex">
                    <span>Översätter...</span>
                    <span class="spinner-border spinner-border-sm" role="status"></span>
                </div>


            </div>
            <div class="modal-footer">
                <button disabled id="accept-text-generation" type="button" class="btn btn-primary">Acceptera ny beskrivning</button>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="MarketItems" asp-controller="Admin"><i class="fas fa-arrow-left"></i> Gå tillbaks</a>
</div>

<div class="row mt-2" id="add-or-edit-content">
    @if(Model.Id == null)
    {
        <h3>Ladda upp ett föremål</h3>
    }
    else
    {
        <h3>Redigera föremålet</h3>
    }
    <div class="col">
        <form class="row g-3" asp-controller="Admin" asp-action="AddOrEditItem">
            <input type="hidden" asp-for="Id" />
            <div class="mb-3 col-md-9">
                <label asp-for="Title" class="form-label">Titel</label>
                <input type="text" asp-for="Title" class="form-control">
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="mb-3 col-md-3">
                <label asp-for="Price" class="form-label">Pris(valfritt)</label>
                <div class="input-group">
                    <input class="form-control" asp-for="Price">
                    <span class="input-group-text">kr</span>
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>

            </div>
            <div class="mb-3 col-12">
                <label asp-for="Description" class="form-label">Beskrivning</label>
                <textarea class="form-control" asp-for="Description" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
                <button class="btn btn-secondary btn-sm extra-function-button" id="translate-button" type="button" onclick="translateDescriptionToEnglish()">Översätt till engelska</button>
                <button class="btn btn-secondary btn-sm extra-function-button" id="generate-title-button" type="button" onclick="generateTitle()">Generera titel baserad på beskrivningen</button>
            </div>
            <div class="mb-3 col-md-3">
                <label asp-for="Status" class="form-label">Status</label>
                <select class="form-select" asp-for="Status" asp-items="Html.GetEnumSelectList<ItemStatus>()">
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="mb-3 col-md-3">
                <label asp-for="Categories" class="form-label">Kategori(er)</label>
                <select id="selectCategories" asp-for="Categories">
                </select>
                <span asp-validation-for="Categories" class="text-danger"></span>
            </div>
            <div class="mb-3 input-group">
                <div class="col-12">
                    <h5>Bilder</h5>
                </div>
                <div class="col-3-md mb-3">
                    <label class="form-label" for="imageInput">Ladda upp bilder</label>
                    <input id="imageInput" type="file" class="form-control" />
                </div>
                <div id="imageGallery" class="col-12 image-gallery">
                    @if(Model.Images != null)
                    {
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            <div id='image-gallery-container-@Model.Images[i].Id' class='image-gallery-container'>
                                <span onclick='deleteImage(@Model.Images[i].Id)' class="close"><i class="far fa-times-circle"></i></span>
                                <input type="hidden" name="Images[@i].Url" value=@Model.Images[i].Url />
                                <input type="hidden" name="Images[@i].Id" value=@Model.Images[i].Id />
                                <img src='@Model.Images[i].Url'>
                            </div>
                        }
                    }

                </div>
            </div>
            <div class="col-12">
                @if (Model.Id != null)
                {
                    <button type="submit" class="btn btn-success w-100">Uppdatera föremålet <i class="fas fa-save"></i></button>
                }
                else
                {
                    <button type="submit" class="btn btn-success w-100">Ladda upp föremål <i class="fas fa-plus"></i></button>
                }
            </div>
        </form>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            var list = @Json.Serialize(Model.CategoriesToChoose);

            var multipleSelectDropdown = new Choices('#selectCategories', {
                removeItemButton: true,
                choices: list
            });

            var imagesCount = @(Model.Images== null ? 0 : Model.Images.Count);

            $('#imageInput').change(function(e){
                var image = $('#imageInput')[0].files[0];


                var file = new FormData();
                file.append('image', image)

                $.ajax({
                    method:"post",
                    url: "/Admin/AddImage",
                    processData: false,
                    contentType: false,
                    cache: false,
                    data: file,
                    success: function (data) {

                        if(data.success == true){
                            $('#imageGallery').append(`<div id='image-gallery-container-${data.id}' class='image-gallery-container'>
                                                  <span onclick='deleteImage(${data.id})' class="close" ><i class="far fa-times-circle"></i></span>
                                                  <input type="hidden" name="Images[${imagesCount}].Url" value=${data.url} />
                                                  <input type="hidden" name="Images[${imagesCount}].Id" value=${data.id} />
                                <img src='${data.url}'>
                             </div>`)
                             imagesCount++;

                            $("#image-gallery-container-" + data.id).click(function (e) {
                                previewImage(data.url);
                            });
                        } else {
                            insertErrorMessage(data.message);
                        }
                    },
                    error: function(data){
                        insertErrorMessage("Error when uploading image.");
                    }
                });
            });

            $(".image-gallery-container").click(function(e){
                var url = $(this).children("img:first").attr("src");
                previewImage(url);
            });

        });

        function deleteImage(id){
            $("#image-gallery-container-"+id).remove();
            updateImagesIndex();

           

            $.ajax({
                method: "post",
                url: "/Admin/DeleteImage/" + id,
                processData: false,
                contentType: false,
                cache: false,
                success: function (data) {
                    console.log(data);
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        function updateImagesIndex(){
            $("#imageGallery").children().each((index, element) => {
                var elements = $(element).children('input');

                elements.each(function(){
                    var prop = $(this).attr('name').substring($(this).attr('name').indexOf('.') + 1);

                    var newName = `Images[${index}].` + prop;
                    $(this).attr('name', newName);

                    imagesCount = index + 1;
                })

            });
        }

        function translateDescriptionToEnglish(){

            $("#translate-button").prop('disabled', true);

            $("#close-translate-modal").click(function () {
                $("#translate-button").prop('disabled', false);
            })

            var text = $("#Description").val();

            $("#text-generation-modal-body").html(`<div class="d-flex">
                            <span>Översätter...</span>
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                        </div>`);

            $('#accept-text-generation').prop('disabled', true);

            var myModal = new bootstrap.Modal(document.getElementById('add-or-edit-modal'), {
                keyboard: false,
                backdrop: 'static'
            })

            myModal.show();


            var file = new FormData();
            file.append('text', text);


            $.ajax({
                method: "post",
                url: "/GenerateContent/TranslateToEnglish/",
                data: file,
                processData: false,
                contentType: false,
                cache: false,
                success: function (data) {
                    console.log(data);
                    if(data.success == true){
                        var generatedText = data.message.trim();
                        var newText = text + "\n****\n" + generatedText;
                        console.log(newText);
                        $('#text-generation-modal-body').html(`<p class='fw-bold'>Ny beskrivning:</p> <p style='white-space:pre-line'>${newText}</p>`);
                        $('#accept-text-generation').prop('disabled', false);
                        $('#accept-text-generation').click(function(){
                            $('#Description').val(newText);
                            myModal.hide();
                        })
                        
                    }
                    else{
                        $('#text-generation-modal-body').html(`<p>Ett fel uppstod</p>`);
                    }
                },
                error: function (data) {
                    insertErrorMessage("Ett fel uppstod.");
                }
            });
        }

        function generateTitle(){

            
            var text = $("#Description").val();

            if(text.length > 0)
            {
                $('#generate-title-button').prop('disabled', true);
                $('#generate-title-button').html(`  <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Genererar...`
                )
                var description = text.trim();

                var end = text.indexOf("****");

                if (end > 0) {
                    description = text.substring(0, end).trim()
                }


                var file = new FormData();
                file.append('description', description);

                $.ajax({
                    method: "post",
                    url: "/GenerateContent/GenerateTitle/",
                    data: file,
                    processData: false,
                    contentType: false,
                    cache: false,
                    success: function (data) {
                        $('#generate-title-button').prop('disabled', false);
                        $('#generate-title-button').html("Generera titel baserad på beskrivningen")

                        if (data.success == true) {
                            var generatedText = data.message.trim();

                            $('#Title').val(generatedText);
                        }
                        else {
                            insertErrorMessage("Ett fel uppstod.");
                        }
                    },
                    error: function (data) {
                        insertErrorMessage("Ett fel uppstod.");
                        $('#generate-title-button').prop('disabled', false);
                        $('#generate-title-button').html("Generera titel baserad på beskrivningen")
                    }
                });
            }



        }


    </script>
}